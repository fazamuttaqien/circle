// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// user Model
model User {
  ID        String   @id @default(uuid())
  username  String   @unique
  fullname  String
  email     String   @unique
  password  String
  avatar    String
  bio       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  likes     Like[]
  threads   Thread[]
  replies   Reply[]
  follower  Follow[] @relation(name: "Following")
  following Follow[] @relation(name: "Follower")
}

model Follow {
  ID          String   @id @default(uuid())
  follower    User     @relation(name: "Follower", fields: [followerID], references: [ID], onDelete: Cascade)
  followerID  String
  following   User     @relation(name: "Following", fields: [followingID], references: [ID], onDelete: Cascade)
  followingID String
  folowedAt   DateTime @default(now())
  isFollow    Boolean? @default(false)
}

model Thread {
  ID        String   @id @default(uuid())
  content   String
  image     String[]
  isEdited  Boolean  @default(false)
  createdAt DateTime @default(now())
  likes     Like[]
  replies   Reply[]
  user      User     @relation(fields: [userID], references: [ID], onDelete: Cascade)
  userID    String
  isLiked   Boolean  @default(false)
}

model Reply {
  ID        String   @id @default(uuid())
  content   String
  image     String
  isEdited  Boolean  @default(false)
  createdAt DateTime @default(now())
  thread    Thread   @relation(fields: [threadID], references: [ID], onDelete: Cascade)
  threadID  String
  user      User     @relation(fields: [userID], references: [ID], onDelete: Cascade)
  userID    String
}

model Like {
  ID       String @id @default(uuid())
  user     User   @relation(fields: [userID], references: [ID], onDelete: Cascade)
  userID   String
  thread   Thread @relation(fields: [threadID], references: [ID], onDelete: Cascade)
  threadID String
}
